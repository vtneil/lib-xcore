#ifndef LIB_XCORE_INCLUDE_BASIC_H
#define LIB_XCORE_INCLUDE_BASIC_H

#include "core/require_cpp17.hpp"

/*
 * You can config the library to use `real_t` other than double via creating "xcore_config.h"
 * or "xcore_config.hpp" file in the user space and includes it.
 */

#if __has_include("xcore_config.h")
#  include "xcore_config.h"
#elif __has_include("xcore_config.hpp")
#  include "xcore_config.hpp"
#endif

#include "internal/macros.hpp"

#include "core/macros_bootstrap.hpp"
#include "core/builtins_bootstrap.hpp"

#include "core/ported_variant.hpp"

#include "core/ported_config.hpp"
#include "core/ported_std.hpp"
#include "core/ported_optional.hpp"
#include "core/custom_numeric.hpp"
#include "core/string_format.hpp"
#include "core/ported_pair.hpp"
#include "core/ported_tuple.hpp"
#include "core/ported_random.hpp"

#include "xcore/memory"

#include "container/array.hpp"
#include "container/deque.hpp"
#include "container/queue.hpp"
#include "container/stack.hpp"
#include "container/byte_buffer.hpp"
#include "container/bitset.hpp"
#include "container/lru_cache.hpp"
#include "container/string.hpp"

#include "utils/nonblocking_delay.hpp"
#include "utils/on_off_timer.hpp"
#include "utils/pipeline.hpp"
#include "utils/json.hpp"

#include "memory/bitmap_allocator.hpp"

#include "network/nav.hpp"

#endif  //LIB_XCORE_INCLUDE_BASIC_H
